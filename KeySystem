do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==3) then v23=nil;function v23()local v38,v39,v40,v41=v1(v15,v18,v18 + 3);v18=v18 + 3 + 1;return (v41 * (16777305 -(8 + 81))) + (v40 * 65536) + (v39 * (843 -587)) + v38;end v24=nil;v17=4;end if (2==v17) then function v21()local v42=1634 -(807 + 827);local v43;while true do if (v42==(765 -(513 + 251))) then return v43;end if (v42==(808 -(308 + 38 + 462))) then v43=v1(v15,v18,v18);v18=v18 + 1;v42=1485 -(111 + 1373);end end end v22=nil;function v22()local v44=91 -(90 + 1);local v45;local v46;while true do if (v44==(0 + 0)) then v45,v46=v1(v15,v18,v18 + (1041 -(388 + 651)));v18=v18 + (3 -1);v44=1 + 0;end if (v44==(1 + 0 + 0)) then return (v46 * 256) + v45;end end end v17=3;end if (v17==4) then function v24()local v47=v23();local v48=v23();return (( -(2 -(203 -(51 + 152))) * v20(v48,23 + 9)) + (589 -(543 + 45))) * ((1292 -(246 + 1044))^(v20(v48,21,143 -112) -(2031 -1008))) * ((((v20(v48,1,49 -29) * ((1 + 1)^(256 -(149 + 75)))) + v47)/(((1112 -(842 + 269)) + 1)^(5 + 47))) + 1);end v25=nil;function v25(v30)local v49;if  not v30 then v30=v23();if (v30==0) then return "";end end v49=v3(v15,v18,(v18 + v30) -(1 -0));v18=v18 + v30;local v50={};for v63=1 -0, #v49 do v50[v63]=v2(v1(v3(v49,v63,v63)));end return v6(v50);end v17=5;end if (v17==6) then v28=nil;function v28()local v51=1265 -(348 + 917);local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51==(571 -(314 + 254))) then v58=nil;while true do local v69=0;local v70;while true do if (v69==(629 -(197 + 432))) then v70=61 -(4 + 57);while true do if (v70~=(0 + 0)) then else local v79=0;while true do if (v79==(367 -(255 + 112))) then if (v52==(929 -(22 + 904))) then local v110=0;while true do local v112=0;while true do if (v112~=0) then else if (v110==(1 + 0)) then return v56;end if (v110==(0 + 0)) then local v117=0;while true do if (v117==(1 + 0)) then v110=1 + 0;break;end if (v117==0) then for v124=1 + 0,v23() do v54[v124-(1027 -(323 + 703))]=v28();end for v126=1 -0,v23() do v55[v126]=v23();end v117=1 + 0;end end end break;end end end end if (v52==1) then local v111=0 -0;while true do if (v111==(1152 -(293 + 859))) then local v115=1965 -(368 + 1597);while true do if (v115==(503 -(118 + 385))) then v56={v53,v54,nil,v55};v57=v23();v115=1787 -(1489 + 297);end if (v115==(1 + 0)) then v111=1;break;end end end if (v111~=1) then else v58={};v52=2;break;end end end v79=1 -0;end if (v79==(1 + 0)) then v70=1;break;end end end if (v70~=(1 + 0)) then else if (v52==2) then for v99=1 + 0,v57 do local v100=0 + 0;local v101;local v102;while true do if (v100~=0) then else local v113=0;while true do if (1~=v113) then else v100=1 -0;break;end if (0==v113) then v101=v21();v102=nil;v113=1;end end end if (v100==(1 + 0)) then if (v101==1) then v102=v21()~=(1747 -(488 + 1259));elseif (v101==2) then v102=v24();elseif (v101~=3) then else v102=v25();end v58[v99]=v102;break;end end end v56[7 -4]=v21();for v103=794 -(576 + 217),v23() do local v104=0 -0;local v105;local v106;local v107;while true do if (v104==(228 -(33 + 195))) then v105=0;v106=nil;v104=1251 -(784 + 466);end if (v104==(2 -1)) then v107=nil;while true do if (v105==0) then v106=0;v107=nil;v105=1 + 0;end if (v105==1) then while true do if (0~=v106) then else v107=v21();if (v20(v107,456 -(26 + 429),1)~=0) then else local v119=0;local v120;local v121;local v122;local v123;while true do if (v119==(6 -4)) then while true do if (v120==(4 -1)) then if (v20(v122,1 + 2,3)==(2 -1)) then v123[16 -12]=v58[v123[4]];end v53[v103]=v123;break;end if (2~=v120) then else local v141=0;local v142;while true do if (v141~=0) then else v142=0 -0;while true do if (v142~=(3 -2)) then else v120=1336 -(345 + 988);break;end if (v142==(0 -0)) then local v202=0 -0;while true do if (v202==(1369 -(1277 + 91))) then v142=1285 -(194 + 1090);break;end if (v202~=0) then else if (v20(v122,1,1 -0)==(1 + 0)) then v123[1359 -(759 + 598)]=v58[v123[2 + 0]];end if (v20(v122,2,2)~=(2 -1)) then else v123[3]=v58[v123[3]];end v202=1 + 0;end end end end break;end end end if ((3 -2)==v120) then local v143=1870 -(1079 + 791);local v144;local v145;while true do if (v143==0) then v144=0;v145=nil;v143=2 -1;end if (v143~=1) then else while true do if (v144==0) then v145=263 -(240 + 23);while true do if (v145~=(132 -(59 + 73))) then else local v224=0 -0;while true do if (v224==(1 + 0)) then v145=1;break;end if (v224~=0) then else v123={v22(),v22(),nil,nil};if (v121==(0 + 0)) then local v257=0;local v258;while true do if (v257==0) then v258=0;while true do if (v258==0) then v123[5 -2]=v22();v123[1661 -(756 + 901)]=v22();break;end end break;end end elseif (v121==1) then v123[3]=v23();elseif (v121==(283 -(218 + 63))) then v123[7 -4]=v23() -((648 -(345 + 301))^(473 -(90 + 367)));elseif (v121==(871 -(392 + 476))) then local v274=1382 -(742 + 640);local v275;while true do if (v274~=0) then else v275=0 + 0;while true do if (v275==0) then v123[4 -1]=v23() -((1 + 1)^(41 -25));v123[4]=v22();break;end end break;end end end v224=1;end end end if (v145~=(3 -2)) then else v120=2;break;end end break;end end break;end end end if (v120==0) then local v146=1680 -(717 + 963);local v147;while true do if ((0 + 0)~=v146) then else v147=0 + 0;while true do if (v147~=(0 + 0)) then else local v203=0;local v204;while true do if (v203==(0 + 0)) then v204=1464 -(956 + 508);while true do if (v204~=1) then else v147=1382 -(120 + 1261);break;end if (v204~=0) then else local v254=1634 -(1118 + 516);while true do if (1==v254) then v204=1 + 0;break;end if (v254==0) then v121=v20(v107,2,3);v122=v20(v107,10 -6,6);v254=1;end end end end break;end end end if (v147==1) then v120=1 + 0;break;end end break;end end end end break;end if ((372 -(329 + 42))~=v119) then else local v128=0;while true do if (v128==(0 + 0)) then v122=nil;v123=nil;v128=1 -0;end if (v128==(1 + 0)) then v119=5 -3;break;end end end if (v119==(0 -0)) then v120=160 -(91 + 69);v121=nil;v119=1 + 0;end end end break;end end break;end end break;end end end v52=3;end if (v52==(0 + 0)) then local v97=0;local v98;while true do if (v97~=(1926 -(933 + 993))) then else v98=0 + 0;while true do if (v98~=0) then else v53={};v54={};v98=1;end if (v98==(2 -1)) then v55={};v52=1 + 0;break;end end break;end end end break;end end break;end end end break;end if (v51==2) then v56=nil;v57=nil;v51=3 + 0;end if (v51==(1 + 0)) then v54=nil;v55=nil;v51=2 -0;end if (v51~=(0 -0)) then else v52=0 + 0;v53=nil;v51=1;end end end v29=nil;v17=7;end if (7==v17) then function v29(v31,v32,v33)local v59=0;local v60;local v61;local v62;while true do if (v59==0) then v60=v31[1];v61=v31[2];v59=1;end if (v59==1) then v62=v31[3];return function(...)local v73=0;local v74;local v75;local v76;local v77;local v78;while true do if (v73==2) then v78=nil;function v78()local v80=v60;local v81=Const;local v82=v61;local v83=v62;local v84=v27;local v85={};local v86={};local v87={};for v92=0 -0,v77 do if ((v92>=v83) or (1678>=(5188 -2966))) then v85[v92-v83]=v76[v92 + (1 -0)];else v87[v92]=v76[v92 + (251 -((160 -57) + 17 + 130))];end end local v88=(v77-v83) + (642 -((1826 -(489 + 940)) + 244));local v89;local v90;while true do local v93=1098 -((1399 -901) + 600);local v94;local v95;while true do if (((2963 + 1322)==4285) and (v93==((968 -(172 + 794)) -1))) then while true do if ((v94==((1365 + 382) -(324 + (1613 -(122 + 68))))) or (((1548 + 4463) -2189)<(256 + 28))) then v95=0 + 0;while true do if ((v95==(0 -0)) or ((233 -77)>=(414 + 971 + 558))) then local v116=0 + (507 -(284 + 223));while true do if ((v116==(1828 -(1123 + 705))) or (((1664 + 7631) -6158)>=(4997 -(119 + 1230)))) then local v118=1246 -(254 + 992);while true do if ((v118==(0 + 0)) or (((2937 -(59 + 36)) -1962)>(7956 -4593))) then v89=v80[v74];v90=v89[(925 -(564 + 360)) + 0];v118=1 + 0;end if (((3975 + 266)<=((12286 -6897) -(131 + 364))) and (1==v118)) then v116=1 -(0 -0);break;end end end if ((v116==(1 -0)) or (((1994 -(13 + 410)) + 96)>(4119 -(694 + 1035)))) then v95=1 + 0;break;end end end if (((7808 -4964)==(6689 -3845)) and (v95==(1 -(0 + 0)))) then if ((v90<=((265 -206) -46)) or ((6833 -((3326 -(1459 + 183)) + 282))==(1360 + (2255 -(832 + 115))))) then if (((8130 -4778)<=(11966 -8444)) and (v90<=(14 -8))) then if (((4893 -(1593 + 1330))>=(270 + 1449)) and (v90<=(1 + 1))) then if (((5457 -((2056 -1358) + 1257))>2138) and (v90<=(0 + 0))) then for v138=v89[2 -0],v89[(509 + 444) -((1393 -811) + 368)] do v87[v138]=nil;end elseif (((4315 -(6013 -4030))==(3047 -(548 + 167))) and (v90==(2 -1))) then local v148=0 + 0;local v149;local v150;local v151;local v152;while true do if (((310 + 290)>=((6760 -4720) -((1584 -(218 + 614)) + 1245))) and (v148==((73 -23) -(11 + 38)))) then v151=nil;v152=nil;v148=117 -(50 + 2 + 63);end if ((v148==((396 -(105 + 290)) + 1)) or ((3451 -(33 + 268 + 919))>(9617 -5089))) then while true do if (((0 + 0)==v149) or (((1859 + 54) -(138 + 500))>=(2102 + 454))) then v150=v82[v89[2 + 1]];v151=nil;v149=1977 -(946 + (1702 -(615 + 57)));end if ((v149==((922 + 419) -(1298 + 42))) or ((700 -405)>(237 + 300))) then local v205=1554 -(945 + 609);while true do if (((687 + 85)==(471 + 301)) and ((284 -((1944 -(1020 + 855)) + 214))==v205)) then v149=1712 -(570 + 1140);break;end if ((v205==(0 -0)) or ((176 + 506)>=(283 + 3129))) then v152={};v151=v9({},{__index=function(v231,v232)local v247=(0 -0) -0;local v248;local v249;while true do if (((931 + 2605)==(6256 -2720)) and (v247==(156 -(77 + 78)))) then while true do if ((v248==(0 -(0 + 0))) or ((1950 -(233 + 29))>(2089 + 81))) then local v263=0;while true do if (((4134 -(186 + 466))<(8175 -4173)) and (v263==(0 -0))) then local v276=0 + 0 + 0;while true do if ((v276==(0 -0)) or ((3947 -(3133 -890))>(12976 -9331))) then v249=v152[v232];return v249[2 -1][v249[2 + 0]];end end end end end end break;end if (((2216 -1022)>=(2125 -(3081 -(1405 + 569)))) and (v247==(0 -0))) then v248=(0 -0) -0;v249=nil;v247=(3 -0) -2;end end end,__newindex=function(v233,v234,v235)local v250=0 + 0;local v251;local v252;local v253;while true do if ((v250==(1896 -(874 + 1022))) or ((5995 -4638)>(2574 -(21 + 706)))) then v251=0 -0;v252=nil;v250=1745 -(392 + 1352);end if ((((513 + 707) -(54 + (239 -(84 + 100))))<(4576 -(575 + 246 + 428))) and (v250==1)) then v253=nil;while true do if ((v251==((657 -(11 + 20)) -((2143 -(1576 + 371)) + 429))) or ((5932 -2517)>=(5199 -((815 -522) + (516 -290))))) then while true do if ((v252==(0 + 0 + 0)) or ((2533 -(913 + 413))>((7217 -5139) + 2486))) then v253=v152[v234];v253[3 -2][v253[214 -(91 + 121)]]=v235;break;end end break;end if ((1065==(582 + 483)) and (v251==(0 + 0))) then local v264=0 + 0 + 0;while true do if (((6257 -(4720 -(1512 + 325)))==(9471 -6097)) and (v264==(1850 -(192 + 1658)))) then v252=0 -0;v253=nil;v264=1 + 0 + 0;end if ((v264==(1 -(0 + 0))) or ((3192 + 188)==(2042 -(425 + 98)))) then v251=3 -2;break;end end end end break;end end end});v205=1 + 0;end end end if (((33 + 159)<(5448 -(143 + 1592))) and (v149==(5 -3))) then for v216=1934 -(1301 + 632),v89[1 + 3] do local v217=0 -(23 -(6 + 17));local v218;while true do if ((v217==(2 -1)) or ((1558 + 234)>(2783 -((818 -(640 + 27)) + 244)))) then if ((v218[2 -1]==(5 + 0)) or ((1149 -446)>=(27 + 552 + 300))) then v152[v216-(1 + 0)]={v87,v218[(376 -(354 + 21)) + 2]};else v152[v216-(1299 -(205 + 1093))]={v32,v218[1345 -(208 + (2989 -(489 + 1366)))]};end v86[ #v86 + ((1508 -(250 + 1255)) -2)]=v152;break;end if ((v217==((1891 -(895 + 996)) + 0)) or ((1512 + 155)==(2435 -1892))) then local v237=(939 -(225 + 371)) -(10 + 90 + (832 -589));while true do if (((2348 -(7 + 12 + (319 -107)))>=(2395 -775)) and (v237==(570 -(198 + 372)))) then v74=v74 + (325 -(147 + (2121 -(512 + 1432))));v218=v80[v74];v237=1 + 0;end if ((v237==1) or ((2320 + 3)>=(10566 -7442))) then v217=3 -2;break;end end end end end v87[v89[(1387 -(821 + 564)) + 0]]=v29(v150,v151,v33);break;end end break;end if (((6977 -(6496 -(830 + 855)))<((5532 -(183 + 75)) -(889 + 4))) and (v148==(0 -0))) then v149=0 + 0;v150=nil;v148=1 + 0;end end else local v153=1734 -(165 + 1569);local v154;while true do if ((v153==(0 -0)) or ((1355 -596)>=(8494 -(5510 -(465 + 723))))) then v154=v89[1 + 1];v87[v154](v87[v154 + 1 + 0]);break;end end end elseif ((v90<=((685 -(30 + 646)) -(14 -9))) or (4042==(4839 -(94 + 331)))) then if (((1347 -((562 -(34 + 195)) + 847))<(524 + 429 + 2517)) and (v90>(657 -(91 + 563)))) then local v155=143 -(19 + 3 + 121);local v156;local v157;local v158;while true do if (((893 + 1682)>(2069 + 93)) and (v155==(912 -(608 + 303)))) then v158=nil;while true do if (((5250 -(162 + 172 + 348))>((35572 -25399) -7043)) and (1==v156)) then while true do if (((2290 -(398 + (2330 -(1050 + 512))))<4379) and (v157==(0 + 0))) then v158=v89[2 + 0 + 0];v87[v158]=v87[v158](v12(v87,v158 + 1 + 0,v89[7 -4]));break;end end break;end if ((v156==(0 -(0 + 0))) or (((4952 -(71 + 317)) -2903)>=(2632 -(87 + 25)))) then v157=(0 -0) -0;v158=nil;v156=1 + 0;end end break;end if (((5664 -(544 + 1333))==((1370 -660) + 3077)) and (v155==0)) then v156=0 + 0;v157=nil;v155=2 -1;end end else v87[v89[419 -(412 + 5)]]=v89[3 -0];end elseif (((6115 -(142 + 1291))>=((15 + 658) -466)) and (v90>(10 -5))) then v87[v89[2 -0]]=v87[v89[1492 -(716 + 773)]][v89[1 + 3]];else v87[v89[3 -1]]=v87[v89[(1407 -(164 + 1241)) + (3 -2)]];end elseif ((v90<=((2703 -1664) -(717 + 313))) or ((3299 -(49 + 208))<=(602 -195))) then if ((v90<=(2 + 5)) or ((1930 + 525 + 945)<=(1912 + (1405 -968)))) then v87[v89[2 + 0]][v89[1 + 2]]=v89[1739 -(1222 + 311 + 202)];elseif (((5205 -(673 + 1099))>(4679 -1837)) and (v90>(1921 -(433 + 1480)))) then local v162=(169 + 631) -(583 + 217);local v163;local v164;local v165;local v166;while true do if ((v162==(0 + 0)) or (((2979 -1897) + 1370)<=(2063 + 80 + 259))) then v163=(3195 -(682 + 852)) -(828 + 833);v164=nil;v162=1035 -(181 + 853);end if ((v162==(1 + 0 + 0)) or ((5652 -(231 + 892))<=(1848 + 148 + 45))) then v165=nil;v166=nil;v162=6 -4;end if ((v162==(1 + 1)) or ((792 + 215)>(4323 -(971 + 1000)))) then while true do if ((v163==(0 -0)) or (3627<=(2601 -(886 + 652)))) then local v207=(0 -0) -0;while true do if (((2543 -(255 + 676))<((5488 -3478) + 927)) and ((0 -0)==v207)) then v164=v89[5 -3];v165=v87[v164];v207=84 -(23 + 60);end if (((4621 -(600 + 499))==(5920 -2398)) and (((1 + 1) -1)==v207)) then v163=2 -1;break;end end end if ((v163==(777 -(100 + 30 + 23 + 623))) or ((1469 + 2414)<(7019 -3784))) then v166=v89[5 -2];for v219=383 -((586 -(136 + 124)) + 56),v166 do v165[v219]=v87[v164 + v219];end break;end end break;end end else local v167=869 -((1699 -(909 + 174)) + 253);local v168;local v169;local v170;local v171;local v172;local v173;while true do if (((8886 -4496)>((1310 + 81) -(122 + 804 + 287))) and (v167==(8 -5))) then while true do if ((v168==(1987 -(24 + 1961))) or (((3827 -(718 + 443)) -(3793 -1889))==(2260 -(326 + 844)))) then v173=nil;while true do if ((v169==(394 -(104 + 288))) or ((3689 + 91 + 460)<(6548 -4363))) then for v238=v170,v75 do local v239=0 + 0;local v240;while true do if ((v239==((0 -0) -0)) or ((2950 -(246 + 513))<=(1077 + 940))) then v240=0 + 0 + 0;while true do if ((v240==(0 + 0)) or ((837 + 191)==(8408 -6105))) then v173=v173 + (46 -(9 + (732 -(509 + 187))));v87[v238]=v171[v173];break;end end break;end end end break;end if (((5485 -((2861 -(868 + 1081)) + 29 + 2))>=(1905 + 1298)) and (v169==((1007 -(891 + 116)) + 0))) then local v226=0 + 0 + 0;local v227;while true do if (((9044 -4359)>(683 + 430)) and ((444 -(292 + 19 + 133))==v226)) then v227=1555 -(64 + 69 + 1422);while true do if (((3411 -1646)<=(1132 + 809)) and (v227==(294 -(205 + 88)))) then v169=1492 -(1486 + 5);break;end if (((2882 + 227)>(1761 + (1747 -1123))) and (v227==(920 -((731 -333) + 522)))) then local v259=1908 -(549 + 283 + 1076);while true do if (((3890 -2647)<(205 + 2067)) and (v259==(933 -(57 + 876)))) then v170=v89[3 -1];v171,v172=v84(v87[v170](v12(v87,v170 + (833 -(426 + 406)),v89[3])));v259=1 -0;end if ((((3371 + 307) -(362 + 520))>(6354 -3902)) and (v259==((253 -(228 + 23)) -(1 + 0)))) then v227=(2 -0) -1;break;end end end end break;end end end if (((595 + 471)>(1735 -((1829 -(791 + 740)) + 418))) and (v169==((2 -0) -1))) then local v228=0 -0;while true do if (((2593 -(299 + 583))<(253 + 3608)) and (v228==(1 + 0))) then v169=(246 -(9 + 232)) -3;break;end if ((v228==(0 + 0 + 0)) or ((2140 + 2463)<(3442 -(41 + (1753 -(906 + 346)))))) then v75=(v172 + v170) -1;v173=0 -0;v228=(35 + 45) -(38 + 24 + 17);end end end end break;end if ((v168==(0 -0)) or (((3071 + 4930) -(5020 -(29 + 110)))<=((1285 -834) -288))) then local v208=(1639 -(1611 + 28)) + 0;while true do if (((137 + 158)<=(2294 -1123)) and (v208==(1498 -(1387 + 110)))) then v168=111 -(107 + 1 + 2);break;end if ((v208==(0 -0)) or ((7582 -3510)<(1816 -(688 + 1072)))) then v169=0 + 0;v170=nil;v208=476 -(254 + 221);end end end if (((3 -2)==v168) or (616>=(873 + 1479))) then local v209=0;while true do if (((3205 -(72 + 482))>=(2488 -(1280 + 421))) and (v209==(1 -0))) then v168=1 + (422 -(284 + 137));break;end if ((v209==(0 + 0)) or ((2774 -1026)==((1328 -(216 + 64)) -((471 -(241 + 8)) + 192)))) then v171=nil;v172=nil;v209=1 + 0;end end end end break;end if ((v167==(7 -5)) or ((1129 + 2403)==(32 + (4828 -1738)))) then v172=nil;v173=nil;v167=732 -(508 + 221);end if ((v167==((1379 -(726 + 653)) + (25 -(14 + 11)))) or ((1400 -397)<=(980 -456))) then v168=(686 -(10 + 676)) -0;v169=nil;v167=625 -(336 + 288);end if (((1134 + 1659)==(374 + 2249 + 170)) and (v167==(1 + 0))) then v170=nil;v171=nil;v167=5 -3;end end end elseif ((v90<=(1856 -(953 + (2133 -1241)))) or ((2720 -969)>=((4053 -1814) -(114 + 325)))) then if (((1746 + (10260 -8044))==(4117 -((971 -(322 + 567)) + 73))) and (v90>(9 + 1))) then local v174=(114 + 312) -(424 + (3 -1));local v175;local v176;local v177;local v178;while true do if ((v174==(530 -(350 + 178))) or ((3002 + 196)<=((5551 -(83 + 602)) -1785))) then while true do if ((v175==(0 -0)) or (((2488 -(366 + 234)) + 998)==(3138 -(308 + 653)))) then v176=0 + 0 + 0;v177=nil;v175=(1 + 1) -(1 + 0);end if ((v175==((3 -2) + 0)) or ((1670 -(272 + 34))>(3876 -(44 + (1034 -(72 + 811)))))) then v178=nil;while true do if ((((0 + 0) -0)==v176) or ((2563 -(26 + 221 + 782))==(17091 -13380))) then local v229=912 -(421 + 491);local v230;while true do if ((((676 + 2736) -2145)<(5061 -(17 + 11 + 51))) and (v229==0)) then v230=801 -(313 + 61 + 427);while true do if (((2234 + (2365 -(1647 + 26)))<((23300 -15050) -4262)) and ((1 + 0 + 0)==v230)) then v176=3 -2;break;end if ((v230==(0 -0)) or ((4633 -(159 + 57))==((5792 -(15 + 1250)) -(132 + 28)))) then local v260=0 + 0;while true do if (((5133 -(51 + 1036))<=(4528 + (2126 -(526 + 1305)))) and (v260==(1870 -(1522 + 348)))) then v177=v89[2 -(0 + 0)];v178={};v260=1 + 0 + 0;end if ((((12390 -8879) -(30 + 11))>=(7856 -5714)) and ((1998 -(9 + 1988))==v260)) then v230=1 + 0 + 0;break;end end end end break;end end end if (((4736 + 213)>=(4915 -(1294 + 179))) and ((1 -0)==v176)) then for v241=1, #v86 do local v242=746 -((1469 -(716 + 452)) + 445);local v243;local v244;while true do if (((4573 -(1699 + 139))>(1276 + (3189 -(1575 + 273)))) and (v242==(1076 -(258 + 817)))) then while true do if (((5547 -(539 + 58))==(4760 + 190)) and (v243==(1667 -(990 + 193 + 484)))) then v244=v86[v241];for v265=(873 -(847 + 26)) -0, #v244 do local v266=1910 -(181 + 1729);local v267;local v268;local v269;local v270;while true do if ((v266==((2592 -(784 + 346)) -(28 + 1433))) or ((1605 -((750 -(234 + 129)) + 88))>=(5540 -(1640 + 185)))) then local v278=0 -(0 -0);while true do if (((588 + 532)>=(1007 -(1733 -1066))) and ((0 + 0)==v278)) then v269=nil;v270=nil;v278=1 + 0;end if ((v278==(556 -(284 + (435 -164)))) or ((2077 -(523 + 417))>=(5940 -1755))) then v266=2 + 0;break;end end end if ((v266==(0 -0)) or ((90 + 9)>=((1862 -(6 + 1167)) + 2352))) then v267=0 -0;v268=nil;v266=1 + 0;end if ((v266==(1851 -(929 + 920))) or ((3234 -(162 + 677))<=((654 -(321 + 9)) + 298 + 32))) then while true do if (((7683 -4789)>(99 + 1557)) and (v267==(3 -2))) then v270=v268[837 -(498 + 337)];if (((v269==v87) and (v270>=v177)) or ((885 + 1732)>=(5583 -(247 + 979 + 293)))) then local v281=165 -(22 + 141 + 2);local v282;while true do if ((v281==(1841 -(1253 + 588))) or ((1927 -(725 + 240))>(2550 + 1519))) then v282=(0 -0) -(0 + 0);while true do if (((3727 -((4811 -3694) + 333))<((26845 -21094) -2410)) and (v282==0)) then v178[v270]=v269[v270];v268[801 -(48 + 752)]=v178;break;end end break;end end end break;end if (((717 + 2522)>(3192 -(428 + 1312 + 191 + 12))) and (v267==((1894 -(651 + 1243)) + 0))) then local v279=0 + 0;local v280;while true do if (((5475 -(1193 + 681))==(3384 + (474 -(80 + 177)))) and (v279==(0 -0))) then v280=313 -(188 + 125);while true do if (((4602 -(12 + 35))>(785 + 326)) and (v280==(1 + 0))) then v267=1 + 0;break;end if ((v280==(26 -(19 + 7))) or (((5216 + 5940) -6259)==(3546 -(231 + 667)))) then v268=v244[v265];v269=v268[1 -0];v280=1 + 0;end end break;end end end end break;end end end break;end end break;end if (((2824 + 769)<(6075 -(303 + 915 + 12))) and (v242==(93 -(42 + (1392 -(1318 + 23)))))) then v243=0 + 0;v244=nil;v242=3 -2;end end end break;end end break;end end break;end if (((2092 -(172 + 342))<=((5886 -(333 + 645)) -(1256 + 499))) and (v174==(272 -(184 + 30 + 58)))) then v175=(2666 -896) -(496 + 1274);v176=nil;v174=719 -(446 + 272);end if (((4242 -((2067 -(1253 + 374)) + 345))>((1979 -(880 + 276)) + 1291)) and (v174==(1 + 0))) then v177=nil;v178=nil;v174=(1 -0) + (216 -(80 + 135));end end else v87[v89[7 -5]]=v33[v89[6 -3]];end elseif ((v90>(36 -24)) or ((745 + 3216)==(4767 -(238 + 230 + 347)))) then v33[v89[10 -7]]=v87[v89[5 -(2 + 1)]];else do return;end end elseif ((v90<=(10 + 10)) or ((7848 -6004)<(240 + 661))) then if ((v90<=(1329 -(818 + 495))) or ((1114 -(376 + 401))>=(135 + 1094))) then if ((v90<=(1 + 13)) or ((666 + 813 + 755)>(1265 + 2194))) then local v130=0;local v131;local v132;local v133;local v134;while true do if (((872 -415)<(1612 + (1049 -682))) and (v130==(1 + 0))) then v133=nil;v134=nil;v130=2 -0;end if ((v130==(0 + 0)) or ((4110 -2605)>=(1900 + 3039))) then v131=0 -0;v132=nil;v130=2 -(1716 -(844 + 871));end if (((1207 -(38 + 5 + 99))<=(3607 -((1158 -(157 + 894)) + 1076))) and (v130==2)) then while true do if ((v131==(2 -1)) or ((1090 -(340 + 351))==((4567 -2794) -(2313 -967)))) then v134=nil;while true do if (((3430 -1806)<((10796 -(161 + 642)) -5312)) and (v132==((13 -9) -3))) then for v223=v133 + (1881 -(1253 + 627)),v89[2 + 1] do v7(v134,v87[v223]);end break;end if (((884 + 386 + 920)<(379 + 2771)) and (v132==(0 -0))) then local v221=981 -(379 + 602);local v222;while true do if ((v221==(719 -(220 + 499))) or ((83 + 46)>(3814 -((361 -115) + (2786 -(1771 + 5)))))) then v222=0 + 0;while true do if (((79 + 407)<=(438 + 1556)) and ((1110 -(661 + 449))==v222)) then v133=v89[3 -1];v134=v87[v133];v222=1508 -(1106 + 401);end if (((1210 + (2368 -(62 + 205)))<=((1297 -(971 + 232)) + 4352)) and (v222==((863 -(395 + 467)) + 0))) then v132=(309 + 739) -(579 + 468);break;end end break;end end end end break;end if ((v131==(0 -0)) or ((11185 -7143)<2351)) then local v200=0 -0;while true do if (((0 + (1521 -(1370 + 151)))==v200) or (((6416 -(343 + 81)) -3636)==(126 + 253 + 147))) then v132=217 -(200 + 12 + 5);v133=nil;v200=879 -(303 + 554 + 21);end if (((4158 -(314 + 653))>=2008) and (v200==((1841 -(1390 + 450)) + 0))) then v131=1 + 0;break;end end end end break;end end elseif (((2679 -(14 + 204))>((1828 -1347) -209)) and (v90==((607 -346) -(5 + 241)))) then v87[v89[(3 + 0) -1]][v89[2 + 1]]=v87[v89[1836 -(245 + 1587)]];else v87[v89[1 + 1]]=v29(v82[v89[8 -5]],nil,v33);end elseif ((v90<=(1661 -(655 + 559 + 429))) or ((2544 -(373 + 295))>=(12259 -9316))) then if ((v90==(1578 -(1415 + 146))) or (((1909 -(1016 + 136)) + 2225)>(5488 -((550 -175) + 205)))) then local v183=0 + 0;local v184;local v185;local v186;while true do if ((((2675 -(387 + 1301)) + 4 + 40)<1921) and (v183==(1 -(0 -0)))) then v186=nil;while true do if (((1430 -361)<=(1349 -(44 + 68))) and (v184==(1611 -(750 + 860)))) then v87[v185 + 1 + 0]=v186;v87[v185]=v186[v89[(2458 -(904 + 1021)) -((233 -(41 + 149)) + (1808 -1322))]];break;end if (((4202 -1995)>=(2257 -(1151 + 501))) and (v184==(1819 -(1487 + 332)))) then local v212=(3040 -1253) -((1085 -321) + 1023);while true do if ((v212==((0 -0) -0)) or ((7065 -5040)==(6166 -(1425 + 386)))) then v185=v89[2 + 0];v186=v87[v89[721 -(167 + 37 + 514)]];v212=1;end if ((v212==(1 + 0)) or ((229 -(575 -(204 + 293)))>(5407 -(450 + 94)))) then v184=1;break;end end end end break;end if (((0 + 0)==v183) or ((655 + 3510)<=((2894 -2125) -(127 + 127)))) then v184=0 -0;v185=nil;v183=4 -3;end end else v74=v89[10 -(7 + 0)];end elseif (((801 + (1684 -(744 + 677)))==(480 + 584)) and (v90>((150 + 274) -((2359 -(272 + 1695)) + 13)))) then if (((5353 -(1431 + 301))>=(5272 -(867 + (2192 -(594 + 709))))) and v87[v89[5 -3]]) then v74=v74 + 1 + 0;else v74=v89[1148 -(1037 + 108)];end elseif (((2494 -1170)>=((4020 -3033) -(173 + 559))) and (v87[v89[2 + 0]]==v89[(14 -9) -1])) then v74=v74 + 1 + 0;else v74=v89[(9 -4) -2];end elseif ((v90<=(9 + 14)) or ((1255 + 2121)<=(6737 -3549))) then if ((v90<=(334 -(125 + 188))) or (4848<(284 -(3 + 162)))) then local v135=0;local v136;local v137;while true do if (((312 + 434)<=(2642 -(137 + 239))) and (v135==((96 -(46 + 50)) + 0))) then v136=(0 -0) + 0;v137=nil;v135=(1684 -(295 + 49)) -(957 + 244 + 138);end if ((v135==(1 + 0)) or ((4987 -((827 -(82 + 583)) + 478))<(1665 -837))) then while true do if (((1094 -(1 + 283 + (1735 -925)))==v136) or ((669 -459)==(2379 -1647))) then v137=v89[2 + (0 -0)];v87[v137]=v87[v137]();break;end end break;end end elseif ((v90==(662 -(544 + 96))) or ((2318 + 159)<=(4943 -2956))) then v87[v89[2 + 0]]={};else local v188=(207 + 1458) -(938 + (1256 -(370 + 159)));local v189;local v190;local v191;while true do if ((v188==(0 + 0)) or (((20896 -12214) -6140)<(1021 -676))) then v189=0 + (1965 -(1041 + 924));v190=nil;v188=768 -(104 + 663);end if (((3326 -(953 + 738 + 282))==(241 + 1112)) and ((1585 -(850 + 734))==v188)) then v191=nil;while true do if (((1704 -((3297 -2160) + 243))<=(819 + 273)) and (v189==(1 + 0))) then while true do if ((v190==((3966 -2549) -(859 + 558))) or ((278 + 451)==(2037 + 26 + 197))) then v191=v89[2 + 0];v87[v191](v12(v87,v191 + (2 -1),v89[3]));break;end end break;end if (((7504 -(5985 -(611 + 877)))>=(2161 + 74)) and ((1534 -(292 + 1242))==v189)) then local v213=0 -(1419 -(727 + 692));while true do if (((5605 -2459)<=(13711 -9297)) and (v213==(1 + 0))) then v189=1 + (1451 -(1441 + 10));break;end if ((v213==(0 + 0)) or ((1667 -(101 + 185))>=(738 + 3831))) then v190=0 -0;v191=nil;v213=1 + 0;end end end end break;end end end elseif (((894 + 2022)>(1605 -(235 + (1283 -(518 + 323))))) and (v90<=(1445 -(593 + (1970 -(143 + 1000)))))) then if ((v90>(925 -(692 + 147 + 62))) or (((744 -491) + 69)==(5649 -(434 + 624)))) then local v192=0 -(611 -(607 + 4));local v193;local v194;while true do if (((344 -(287 + (114 -57)))==v192) or ((3853 -((151 -(9 + 34)) + 30))==((22191 -(1378 + 198)) -15637))) then v193=(1353 -(1143 + 210)) -0;v194=nil;v192=1 + 0;end if (((3150 + 1064)<=(2737 + 2198)) and (v192==(1387 -((2093 -(82 + 774)) + (367 -218))))) then while true do if ((v193==(0 + 0)) or ((7583 -4966)<(370 + 48 + 444))) then v194=v89[2 + 0];v87[v194]=v87[v194](v12(v87,v194 + (1 -0),v75));break;end end break;end end elseif ((v89[(3 + 0) -1]==v87[v89[(984 + 46) -(381 + 645)]]) or ((3998 + 841)<(484 + 776))) then v74=v74 + (2 -1);else v74=v89[7 -(2 + 2)];end elseif (((1052 + 963)<(7340 -4876)) and (v90==(9 + 17))) then local v195=0 + 0;local v196;local v197;while true do if ((v195==(1 + 0 + 0)) or ((2992 -1114)<(1833 -1057))) then while true do if ((v196==(0 -0)) or ((2454 -950)>2799)) then v197=v89[1 + 1];v87[v197]=v87[v197](v87[v197 + (1357 -(646 + 710))]);break;end end break;end if (((3080 + 636)>(190 + 487)) and (v195==(1768 -(239 + 1529)))) then v196=(2149 -(501 + 162)) -(27 + 1459);v197=nil;v195=1 + 0;end end else v87[v89[1971 -(1191 + (3513 -2735))]]=v32[v89[10 -7]];end v74=v74 + 1 + 0;break;end end break;end end break;end if ((v93==(0 -(0 -0))) or ((1275 + 3553)<=(4833 -(45 + 341)))) then v94=0 + 0;v95=nil;v93=752 -((1866 -(1022 + 567)) + (2104 -1630));end end end end v73=3;end if (v73==1) then v76={...};v77=v11("#",...) -1;v73=2;end if (v73==3) then A,B=v27(v10(v78));if  not A[1] then local v91=v31[4][v74] or "?";error("Script error at ["   .. v91   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v73==0) then v74=1;v75= -1;v73=1;end end end;end end end return v29(v28(),{},v16)();end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==1) then v20=nil;function v20(v34,v35,v36)if v36 then local v65=1973 -(1551 + 422);local v66;while true do if (0==v65) then v66=(v34/((5 -3)^(v35-(584 -(89 + 494)))))%((4 -2)^(((v36-((4 -2) -1)) -(v35-(2 -(1 + 0)))) + (3 -(4 -2))));return v66-(v66%(1 -0));end end else local v67=(7 -(6 -1))^(v35-1);return (((v34%(v67 + v67))>=v67) and 1) or (0 + 0);end end v21=nil;v17=2;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then v19=v0(v3(v37,1,1));return "";else local v68=v2(v0(v37,16));if v19 then local v71=0;local v72;while true do if (v71==0) then v72=v5(v68,v19);v19=nil;v71=1;end if (v71==1) then return v72;end end else return v68;end end end);v17=1;end end end vv8());end
