do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (4==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (5==v0) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v65=0;while true do if (v65==0) then v19=v1(v4(v30,1,1));return "";end end else local v66=v3(v1(v30,16));if v19 then local v74=0;local v75;while true do if (v74==1) then return v75;end if (v74==0) then v75=v6(v66,v19);v19=nil;v74=1;end end else return v66;end end end);local function v20(v31,v32,v33)if v33 then local v67=(v31/((5 -3)^(v32-(1 + 0))))%((732 -(693 + 37))^(((v33-(3 -2)) -(v32-((1978 -(1318 + 290)) -(144 + 225)))) + (3 -2)));return v67-(v67%(1 -0));else local v68=1597 -(587 + 1010);local v69;while true do if (v68==(0 -0)) then v69=(1 + 1)^(v32-(1 + 0));return (((v31%(v69 + v69))>=v69) and (252 -(179 + 72))) or (0 + 0);end end end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39=469 -((484 -(171 + 13)) + 169);local v40;local v41;while true do if (v39==(1791 -(1606 + 185))) then v40,v41=v2(v16,v18,v18 + (1485 -((2343 -1573) + 713)));v18=v18 + 1 + 1;v39=3 -2;end if (v39==(86 -(75 + 10))) then return (v41 * (1541 -(797 + 313 + 175))) + v40;end end end local function v23()local v42,v43,v44,v45=v2(v16,v18,v18 + 3 + 0);v18=v18 + (11 -7);return (v45 * (67373691 -50596475)) + (v44 * (2461 + 1617 + 61458)) + (v43 * (632 -376)) + v42;end local function v24()local v46=880 -(94 + 786);local v47;local v48;while true do if (v46==(0 -0)) then v47=v23();v48=v23();v46=4 -3;end if (v46==(1056 -((986 -(103 + 70)) + 242))) then return (( -(2 + 0) * v20(v48,80 -48)) + (2 -1)) * ((1 + 1)^(v20(v48,784 -(618 + (639 -494)),75 -44) -(811 + 212))) * ((((v20(v48,1 + 0,99 -79) * ((2 + 0)^(68 -36))) + v47)/(((1762 -(511 + 1248)) -(1 + 0))^(897 -(250 + 595)))) + (1927 -(1029 + (1735 -838))));end end end local function v25(v34)local v49;if  not v34 then local v70=0 -0;while true do if (0==v70) then v34=v23();if (v34==(0 -0)) then return "";end break;end end end v49=v4(v16,v18,(v18 + v34) -(1 + 0));v18=v18 + v34;local v50={};for v63=4 -3, #v49 do v50[v63]=v3(v2(v4(v49,v63,v63)));end return v7(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51~=3) then else v58=nil;while true do local v76=0;local v77;while true do if ((0 -0)~=v76) then else v77=0 -0;while true do if (1~=v77) then else if ((4 -2)~=v52) then else local v104=0;local v105;local v106;while true do if (v104==(0 + 0)) then v105=0 -0;v106=nil;v104=1;end if (v104~=(1 -0)) then else while true do if (v105==0) then v106=0;while true do if (v106~=(0 -0)) then else local v112=0;while true do if (v112==1) then v106=1 + 0;break;end if (v112~=(0 + 0)) then else for v181=1 -0,v57 do local v182=376 -(218 + 158);local v183;local v184;local v185;local v186;while true do if (v182==2) then while true do if (1==v183) then v186=nil;while true do if (v184~=(3 -2)) then else if (v185==(1 + 0)) then v186=v21()~=0;elseif (v185==2) then v186=v24();elseif (v185~=3) then else v186=v25();end v58[v181]=v186;break;end if (v184~=(0 -0)) then else local v240=0;local v241;while true do if (v240~=0) then else v241=1355 -(363 + 992);while true do if ((1 -0)~=v241) then else v184=3 -2;break;end if (v241==0) then local v263=1442 -(752 + 690);local v264;while true do if ((0 -0)~=v263) then else v264=0;while true do if (v264~=1) then else v241=1 + 0;break;end if (v264~=(870 -(669 + 201))) then else local v272=0;while true do if (v272~=(1906 -(1637 + 269))) then else v185=v21();v186=nil;v272=2 -1;end if (v272==(1 + 0)) then v264=1 + 0;break;end end end end break;end end end end break;end end end end break;end if (v183==(0 + 0)) then v184=0 -0;v185=nil;v183=1441 -(53 + 1387);end end break;end if (v182==(0 -0)) then v183=0;v184=nil;v182=1;end if (v182==(237 -(133 + 103))) then v185=nil;v186=nil;v182=1 + 1;end end end v56[3 + 0]=v21();v112=466 -(421 + 44);end end end if (v106~=(1 + 0)) then else for v118=1334 -(102 + 1231),v23() do local v119=0;local v120;local v121;local v122;while true do if (v119==(0 + 0)) then v120=0;v121=nil;v119=1;end if ((3 -2)==v119) then v122=nil;while true do if (v120~=1) then else while true do if (v121~=0) then else v122=v21();if (v20(v122,1,1)==(0 -0)) then local v230=0;local v231;local v232;local v233;local v234;while true do if (v230==(5 -3)) then while true do if (v231~=(1473 -(1073 + 400))) then else local v255=0 -0;while true do if (v255==0) then v232=v20(v122,2 + 0,3);v233=v20(v122,1036 -(647 + 385),562 -(35 + 521));v255=1 + 0;end if (v255==1) then v231=1;break;end end end if (v231~=2) then else local v256=0 -0;while true do if (v256==(1497 -(983 + 513))) then v231=1621 -(629 + 989);break;end if (0~=v256) then else if (v20(v233,335 -(179 + 155),1)~=(365 -(44 + 320))) then else v234[2]=v58[v234[2]];end if (v20(v233,2,8 -6)~=1) then else v234[3]=v58[v234[3]];end v256=4 -3;end end end if ((2 + 1)~=v231) then else if (v20(v233,6 -3,3)~=1) then else v234[4]=v58[v234[93 -(37 + 52)]];end v53[v118]=v234;break;end if (v231~=(1 + 0)) then else local v258=1094 -(494 + 600);local v259;while true do if (v258~=(993 -(483 + 510))) then else v259=0;while true do if (v259~=1) then else v231=992 -(691 + 299);break;end if (v259~=(0 + 0)) then else v234={v22(),v22(),nil,nil};if (v232==(0 + 0)) then local v275=0;local v276;local v277;while true do if (v275~=0) then else local v279=0;while true do if (v279==1) then v275=231 -(198 + 32);break;end if (v279~=(0 + 0)) then else v276=0 -0;v277=nil;v279=1 + 0;end end end if (v275~=(1686 -(731 + 954))) then else while true do if (v276==0) then v277=0 -0;while true do if (v277==(0 -0)) then v234[7 -4]=v22();v234[1 + 3]=v22();break;end end break;end end break;end end elseif (v232==(2 -1)) then v234[1 + 2]=v23();elseif (v232==(218 -(111 + 105))) then v234[321 -(37 + 281)]=v23() -((2 + 0)^16);elseif (v232==(11 -8)) then local v281=0 -0;local v282;while true do if (v281==(647 -(185 + 462))) then v282=0;while true do if (v282==(0 -0)) then v234[3]=v23() -((1 + 1)^16);v234[6 -2]=v22();break;end end break;end end end v259=3 -2;end end break;end end end end break;end if (v230==1) then v233=nil;v234=nil;v230=2 + 0;end if (v230~=0) then else v231=753 -(178 + 575);v232=nil;v230=1;end end end break;end end break;end if (v120==(1803 -(47 + 1756))) then local v196=0;local v197;while true do if (v196==0) then v197=0 + 0;while true do if (v197==0) then v121=0 + 0;v122=nil;v197=1 -0;end if (v197==1) then v120=1 + 0;break;end end break;end end end end break;end end end v52=8 -5;break;end end break;end end break;end end end if (v52==(0 + 0)) then local v107=0 -0;local v108;while true do if (v107==(0 -0)) then v108=947 -(347 + 600);while true do if (v108~=(2 -1)) then else v55={};v52=1 -0;break;end if (0==v108) then local v111=0;while true do if (v111==(1 + 0)) then v108=1090 -(952 + 137);break;end if (v111==(1672 -(1646 + 26))) then local v113=0;while true do if (v113~=0) then else v53={};v54={};v113=1;end if (v113~=1) then else v111=1;break;end end end end end end break;end end end break;end if (v77~=0) then else local v100=0 -0;local v101;while true do if (v100==0) then v101=0 -0;while true do if (v101~=(1394 -(689 + 705))) then else local v110=0 + 0;while true do if (v110~=1) then else v101=1;break;end if (v110~=(415 -(339 + 76))) then else if (v52==3) then local v114=592 -(149 + 443);local v115;local v116;while true do if (v114~=(1 + 0)) then else while true do if (v115~=(1804 -(764 + 1040))) then else v116=1088 -(403 + 685);while true do local v198=0;while true do if (v198==0) then if (0~=v116) then else for v242=1,v23() do v54[v242-(1 + 0)]=v28();end for v244=1 -0,v23() do v55[v244]=v23();end v116=1;end if (v116==(1 + 0)) then return v56;end break;end end end break;end end break;end if (v114~=0) then else v115=0 -0;v116=nil;v114=1;end end end if (v52~=(1 + 0)) then else local v117=0;while true do if (v117~=(380 -(219 + 161))) then else local v130=1425 -(510 + 915);while true do if ((1 + 0)~=v130) then else v117=1;break;end if (v130~=0) then else v56={v53,v54,nil,v55};v57=v23();v130=2 -1;end end end if (v117==(1264 -(747 + 516))) then v58={};v52=2 + 0;break;end end end v110=1 + 0;end end end if (v101==1) then v77=1 + 0;break;end end break;end end end end break;end end end break;end if (v51==2) then local v71=0 + 0;while true do if (v71~=0) then else local v83=466 -(256 + 210);while true do if (v83==0) then v56=nil;v57=nil;v83=1 -0;end if (v83==1) then v71=2 -1;break;end end end if (v71~=(2 -1)) then else v51=3;break;end end end if (v51==(1475 -(764 + 711))) then local v72=0;while true do if (v72==(1250 -(831 + 419))) then v52=1445 -(165 + 1280);v53=nil;v72=1;end if (v72==(2 -1)) then v51=1;break;end end end if (v51==(1228 -(808 + 419))) then local v73=0;while true do if (v73==(3 -2)) then v51=6 -4;break;end if (v73~=0) then else v54=nil;v55=nil;v73=1;end end end end end local function v29(v35,v36,v37)local v59=0;local v60;local v61;local v62;while true do if (v59==1) then v62=v35[3];return function(...)local v78=1;local v79= -1;local v80={...};local v81=v12("#",...) -1;local function v82()local v84=v60;local v85=Const;local v86=v61;local v87=v62;local v88=v27;local v89={};local v90={};local v91={};for v97=0 -0,v81 do if ((v97>=v87) or (4735==(294 + 4012))) then v89[v97-v87]=v80[v97 + (1138 -(99 + 1038))];else v91[v97]=v80[v97 + (4 -3)];end end local v92=(v81-v87) + (2 -1);local v93;local v94;while true do local v98=(1662 -(44 + 142)) -((502 -(86 + 381)) + 1441);local v99;while true do if ((v98==0) or ((244 + 527)>=((3909 + 755) -(1290 + 85)))) then v99=693 -(302 + 391);while true do if ((v99==(1684 -(304 + 1380))) or ((2611 -(83 + 108))>(637 + 550 + 1712))) then local v109=0 + 0;while true do if ((v109==(0 -0)) or ((160 + 2532)<(2020 -(282 + 652)))) then v93=v84[v78];v94=v93[278 -(179 + 98)];v109=773 -(333 + 439);end if ((v109==((497 + 34) -(185 + 345))) or (2492<=(1160 -(228 + 68)))) then v99=1 + 0;break;end end end if ((v99==1) or (4929<=3239)) then if ((v94<=((1911 -(28 + 28)) -((776 -570) + 1636))) or ((2191 -(338 + 823 + 200))>=(4761 -(611 + 28)))) then if ((v94<=(939 -(116 + 641 + 176))) or ((878 -(162 + 365))>(400 + 620))) then if ((v94<=((4 + 1) -3)) or ((2291 -(801 + 825))>=1358)) then if (((10191 -6339)>=2336) and (v94<=0)) then local v123=0;local v124;local v125;while true do if (((4602 -3227)>=(1715 -(667 + 307))) and (v123==(1 + 0))) then while true do if ((0==v124) or ((3007 + 1850)<=(196 + 1722 + 69))) then v125=v93[4 -2];v91[v125]=v91[v125](v13(v91,v125 + 1,v79));break;end end break;end if ((v123==(1454 -(674 + 780))) or ((348 + 4141)>(4289 + 568))) then v124=0 + 0;v125=nil;v123=(2626 -(290 + 954)) -(972 + 409);end end elseif (((76 + 107 + 1310)<(4930 -2603)) and (v94==(1 -0))) then local v131=1701 -(1670 + 31);local v132;local v133;while true do if (((586 -(446 + 140))==v131) or ((1010 + 2807)<=(1293 -(88 + 57)))) then v132=0 + 0;v133=nil;v131=1 + 0 + 0;end if ((4914>=(4 + 163)) and (v131==(1 + 0))) then while true do if (((710 + 3298)<(3627 + 642)) and (v132==(0 -0))) then v133=v93[2];v91[v133](v13(v91,v133 + 1,v93[3 + 0]));break;end end break;end end else v91[v93[8 -6]][v93[10 -(25 -18)]]=v93[51 -(16 + 31)];end elseif (((5902 -(291 + 1157))>=(7881 -4183)) and (v94<=(12 -8))) then if (((84 + 690)<=(3546 -(37 + (1558 -(1041 + 396))))) and (v94==(3 + 0))) then local v135=0 -0;local v136;local v137;local v138;local v139;local v140;while true do if (((2511 -(870 + (1455 -(512 + 856))))==(3023 -(1120 + 349))) and (v135==(0 -(0 + 0)))) then v136=0;v137=nil;v135=1 + 0;end if ((v135==1) or (((3429 -(908 + 63)) + 2367)<(1462 + 546))) then v138=nil;v139=nil;v135=5 -3;end if (((6198 -(463 + 4 + 812))>(2281 -(238 + 731))) and (2==v135)) then v140=nil;while true do if ((v136==(0 -(0 -0))) or ((4351 -(1118 + 19))==(1035 + 745 + 578))) then v137=v93[(253 + 195) -(63 + 383)];v138,v139=v88(v91[v137](v13(v91,v137 + (2 -1),v93[14 -(54 -43)])));v136=1;end if (((12400 -(8488 -(267 + 545)))==(2564 + 2160)) and (v136==2)) then for v211=v137,v79 do local v212=(282 -(281 + 1)) + 0;local v213;local v214;while true do if ((v212==(0 -0)) or ((2445 + 2021)<=(1946 -(83 + 43)))) then v213=91 -(12 + 79);v214=nil;v212=1;end if (((3561 -(248 + 76))>=(982 + 440)) and (v212==((2219 -940) -(793 + 485)))) then while true do if ((((1998 -955) + 326)<(4076 -(283 + 415))) and (v213==(1058 -(401 + 657)))) then v214=(1761 -(1444 + 317)) + 0;while true do if ((v214==(0 + 0)) or ((1092 -(281 + 725))>=((6303 -3643) -1737))) then v140=v140 + 1;v91[v211]=v138[v140];break;end end break;end end break;end end end break;end if ((v136==((213 -(14 + 196)) -2)) or ((8178 -4451)==(5966 -(34 + (1917 -(153 + 225)))))) then local v205=1561 -(315 + 1246);while true do if (((4550 -(585 + 527))>(885 + (2337 -(837 + 695)))) and (v205==(1032 -(657 + (793 -419))))) then v136=1 + 1;break;end if ((410<(1613 + 595)) and ((1212 -(990 + 222))==v205)) then v79=(v139 + v137) -(1 + 0);v140=0 + 0;v205=1 -0;end end end end break;end end else v91[v93[2 -0]]=v93[3];end elseif ((v94>(1 + 4)) or ((6201 -(290 + 1198))<(13670 -9418))) then local v142=1187 -(139 + 1048);local v143;local v144;local v145;local v146;while true do if ((v142==(1772 -(1318 + 454))) or ((3693 -(1496 + 346))>(1013 + (5708 -(1482 + 464))))) then v143=0 -0;v144=nil;v142=3 -2;end if ((v142==(1845 -((1992 -(539 + 1360)) + 1750))) or ((6344 -(1561 + 301))>(5371 -((1425 -795) + 112)))) then while true do if ((v143==(1 + 0)) or (29==3189)) then v146=nil;while true do if ((v144==1) or ((10621 -6567)>(5467 -(557 + 61)))) then for v246=v145 + (2 -1),v93[5 -2] do v8(v146,v91[v246]);end break;end if (((991 + 531 + 1756)>=(1263 + 154)) and (v144==((0 + 0) -0))) then local v235=(0 -0) -0;local v236;while true do if (((6417 -3697)<2802) and (v235==0)) then v236=0;while true do if ((v236==(677 -(537 + 65 + 75))) or ((882 + 2394)<(5752 -3653))) then local v260=0 + 0;while true do if ((v260==(0 + 0)) or ((5136 -((2731 -(1087 + 42)) + 267))<(4213 -2123))) then v145=v93[(1428 -(1082 + 343)) -1];v146=v91[v145];v260=163 -(29 + 133);end if ((((4592 -2919) -(1634 + 38))==v260) or (667>(1346 + 418))) then v236=2 -1;break;end end end if ((v236==(1 + (600 -(516 + 84)))) or ((1718 + 743)>=(4574 -(915 + 858)))) then v144=1 -0;break;end end break;end end end end break;end if ((v143==(0 -0)) or (146>2372)) then local v206=0 -0;while true do if (((1003 + (2193 -(19 + 123)))==(195 + 2160 + 699)) and (v206==(84 -(54 + 29)))) then v143=1;break;end if ((2859>(688 + 125)) and (v206==(0 -0))) then v144=0;v145=nil;v206=(6 -4) -1;end end end end break;end if (((1083 + 3827)>=(5093 -3097)) and (v142==(1 + (0 -0)))) then v145=nil;v146=nil;v142=1465 -(448 + 1015);end end else local v147=0;local v148;local v149;while true do if ((v147==(618 -(483 + 135))) or ((10900 -6842)<(1273 + 259))) then v148=1890 -(1478 + 412);v149=nil;v147=(2151 -1358) -(764 + 28);end if (((543 + 2227)>=(2025 -(678 + 82))) and (v147==(92 -(59 + 32)))) then while true do if ((v148==(403 -(7 + 396))) or (((4613 + 445) -(704 + 266))<=(12295 -8366))) then v149=v93[1 + 1];v91[v149]=v91[v149](v91[v149 + (1648 -(1212 + 435))]);break;end end break;end end end elseif ((1113==(938 + 175)) and (v94<=(1 + 8))) then if (((6509 -(967 + 747))>=(13363 -10287)) and (v94<=(1840 -(1210 + 180 + 443)))) then v91[v93[1275 -(670 + 603)]]=v37[v93[3 + 0]];elseif ((v94>(820 -(643 + 169))) or ((1936 + 253)>(2059 + 1335))) then local v150=0 + 0;local v151;local v152;local v153;local v154;while true do if ((v150==(0 + 0)) or ((4888 -(8 + 31))<=(33 + 1135))) then v151=0 + 0;v152=nil;v150=(1961 -563) -(16 + 1381);end if ((3613>=409) and (v150==(1 + 0))) then v153=nil;v154=nil;v150=2 + 0;end if ((v150==2) or (909>=(6949 -4050))) then while true do if (((1081 + 1237)>=(5993 -(8064 -4253))) and (v151==(1293 -(1289 + 3)))) then v154=v93[3 + 0];for v215=1 + 0,v154 do v153[v215]=v91[v152 + v215];end break;end if ((v151==(232 -(192 + 40))) or ((2218 -(7 + (460 -(10 + 437))))<=(229 -118))) then v152=v93[2];v153=v91[v152];v151=(427 + 1124) -((2399 -(807 + 302)) + 260);end end break;end end else do return;end end elseif (((3943 -(594 + 306))>=((4929 -1451) -(104 + 1350))) and (v94<=(30 -19))) then if (((3964 -(189 + 506))>225) and (v94>10)) then v78=v93[1553 -(286 + 1264)];else local v155=1710 -(778 + 932);local v156;local v157;local v158;while true do if ((v155==((195 -91) -(52 + 52))) or ((4164 + 785)<=403)) then local v189=0 -0;while true do if ((v189==(1 + 0)) or ((4873 -3213)<(61 + 88))) then v155=1090 -(14 + 1075);break;end if ((v189==(1877 -(1027 + 850))) or (((19738 -13109) -4187)>=(3970 + 967))) then v156=0;v157=nil;v189=1 + 0;end end end if (((7362 -4112)<=((2901 -(866 + 845)) + 2989)) and (v155==(1 + 0))) then v158=nil;while true do if ((v156==(1926 -(1137 + 788))) or (4282==(1094 + 470))) then for v217=1193 -(130 + 1062), #v90 do local v218=0 -0;local v219;while true do if (((1294 -(353 + 279))<=((5725 -3669) -(351 + 939))) and (v218==(1616 -(312 + 1304)))) then v219=v90[v217];for v247=0 + 0, #v219 do local v248=1628 -(76 + 1552);local v249;local v250;local v251;while true do if ((693<=(4353 -(480 + 398))) and (v248==(629 -(153 + 475)))) then v251=v249[1131 -(1097 + 32)];if ((3838<=4300) and (v250==v91) and (v251>=v157)) then local v266=0;local v267;while true do if ((v266==(0 -0)) or (461>(3046 -2001))) then v267=0;while true do if ((v267==(783 -(341 + 442))) or ((4745 -(1075 + 83))<=(2872 + 148))) then v158[v251]=v250[v251];v249[3 -(1 + 1)]=v158;break;end end break;end end end break;end if (((294 + 2991)==(4830 -(1097 + 448))) and (((143 + 41) -((101 -57) + 140))==v248)) then v249=v219[v247];v250=v249[1 + 0];v248=1094 -(1068 + 25);end end end break;end end end break;end if ((v156==(0 -0)) or ((15032 -11242)==(1806 + 188))) then local v208=0 + 0;local v209;while true do if (((3696 -(818 + 507))>1686) and (v208==0)) then v209=(367 + 142) -(265 + 244);while true do if (((1381 -(142 + 997))<=(3796 + 1165)) and ((1 + 0)==v209)) then v156=1 + 0;break;end if (((4476 -(443 + 24))>=3901) and (v209==(884 -(357 + 527)))) then v157=v93[2 -0];v158={};v209=1;end end break;end end end end break;end end end elseif ((v94==((970 -287) -(240 + 431))) or ((454 + 810)==((4017 -(766 + 71)) -1442))) then local v159=259 -((739 -545) + 65);local v160;local v161;while true do if (((1618 -(272 + 1346))==v159) or ((2103 -((305 -118) + 1761))==(1319 -555))) then local v190=0 + 0;while true do if (((4517 -(796 + 260))>=3053) and (v190==(0 -0))) then v160=v93[2];v161=v91[v93[137 -(91 + 43)]];v190=1 + 0;end if (((4069 -(444 + 1467))==(6751 -4593)) and (v190==(1 -0))) then v159=1;break;end end end if ((2440<=4781) and (v159==(1 + 0))) then v91[v160 + (700 -(385 + 314))]=v161;v91[v160]=v161[v93[9 -5]];break;end end else v91[v93[7 -5]]={};end elseif ((v94<=(97 -77)) or ((1779 -845)<(1536 -(1336 + 155)))) then if (((780 + 877)>=483) and (v94<=16)) then if ((v94<=(54 -40)) or ((9922 -(11534 -4040))>4156)) then if (v91[v93[2]] or ((15470 -11073)<=4383)) then v78=v78 + 1 + 0;else v78=v93[(1860 -(558 + 1300)) + 1];end elseif ((((14425 -10762) -((391 -(132 + 211)) + 250))>=(3483 -(756 + 137))) and (v94>15)) then for v187=v93[2],v93[717 -(578 + 136)] do v91[v187]=nil;end else v91[v93[1 + 1]]=v36[v93[(74 -(16 + 57)) + (2 -0)]];end elseif ((v94<=(42 -24)) or ((3534 -(533 + 539))==3027)) then if (((1512 -450)<(5129 -(1415 + 578))) and (v94==((119 -90) -12))) then if ((v93[2 + 0]==v91[v93[1209 -(174 + 1031)]]) or ((907 -(133 + 498))>((3436 -2194) -(22 + (723 -428))))) then v78=v78 + (26 -(7 + 18));else v78=v93[(1915 -(492 + 1421)) + 1];end else local v164=0 -0;local v165;local v166;local v167;while true do if ((1870>=948) and (v164==(971 -(724 + (1987 -(1092 + 649)))))) then v167=nil;while true do if ((v165==(788 -(371 + 417))) or ((3182 -(117 + 97))>(6554 -2624))) then v166=(2139 -(70 + 1399)) -(513 + 157);v167=nil;v165=1097 -(162 + 934);end if ((v165==(966 -(647 + 318))) or ((5462 -2386)==(2581 + 1758))) then while true do if ((v166==(0 -0)) or (2539<=(2411 -(625 + 1320)))) then v167=v93[559 -(81 + 476)];v91[v167]=v91[v167](v13(v91,v167 + (1014 -(552 + 461)),v93[6 -3]));break;end end break;end end break;end if (((171 -96)==(159 -84)) and (v164==(0 + 0))) then v165=0 + 0;v166=nil;v164=1;end end end elseif (((5795 -(1960 -404))>=(700 + 1462)) and (v94>(12 + 7))) then local v168=0;local v169;local v170;local v171;while true do if (((5120 -(827 + (950 -374)))>=(2033 -1043)) and (v168==(1440 -(288 + 1150)))) then for v200=1 + 0,v93[4] do local v201=0 + 0;local v202;local v203;local v204;while true do if (((1 -0)==v201) or ((8600 -4060)<=(502 + 1626))) then v204=nil;while true do if (((1 + 0)==v202) or ((2873 -2116)>(2952 + 1119))) then while true do if ((v203==((1809 -(1361 + 448)) -0)) or (316>=(5136 -(263 + 69)))) then local v253=0;while true do if (((2649 -((742 -(464 + 85)) + 22))>=((2045 + 2882) -2841)) and ((1 + 0)==v253)) then v203=2 -1;break;end if (((1408 -(696 + 698))<=(4832 -(113 + 509))) and (v253==0)) then local v268=1282 -(582 + 700);while true do if ((v268==1) or (3621>(15324 -11132))) then v253=2 -1;break;end if ((v268==(1852 -(465 + 1387))) or ((1102 + 957)==((13631 + 7580) -16598))) then v78=v78 + (1929 -(1781 + 147));v204=v84[v78];v268=1 + 0;end end end end end if ((v203==(4 -3)) or ((2260 + 2567)<=(1225 -((147 -40) + 911)))) then if ((3420>3193) and (v204[1 -0]==(98 -73))) then v171[v200-(1 + 0)]={v91,v204[3]};else v171[v200-(343 -((341 -(37 + 166)) + (453 -(18 + 231))))]={v36,v204[3]};end v90[ #v90 + ((1 + 1) -1)]=v171;break;end end break;end if ((974==(1325 -((153 -101) + 299))) and (v202==(0 -0))) then v203=83 -(35 + 48);v204=nil;v202=1699 -(134 + 1197 + 367);end end break;end if ((v201==0) or ((130 + 1172)>(324 + 1196))) then v202=0 -0;v203=nil;v201=1 + 0;end end end v91[v93[718 -(412 + 304)]]=v29(v169,v170,v37);break;end if ((1126<2399) and (v168==(0 + 0))) then local v194=0 -(0 -0);while true do if (((671 + (7782 -4904))<(3414 + 906)) and (v194==(453 -(412 + 40)))) then v168=1;break;end if (((4491 -(749 + 497))<=(5504 -(157 + 400))) and (v194==((1355 + 27) -(108 + 1274)))) then v169=v86[v93[2 + 1]];v170=nil;v194=1 -(1230 -(945 + 285));end end end if ((((4046 -(27 + 1454)) -(483 + 824))>(1908 -1102)) and (v168==(1998 -(1426 + 571)))) then local v195=0 -0;while true do if (((6244 -2298)>=2184) and (v195==(0 + 0))) then v171={};v170=v10({},{__index=function(v220,v221)local v225=(0 -0) + 0;local v226;local v227;while true do if (((2 -1)==v225) or ((2892 -1936)==(185 -71))) then while true do if (((1555 -1136)==(368 + 51)) and (v226==(1587 -(389 + 1198)))) then v227=v171[v221];return v227[64 -(33 + 6 + 24)][v227[2]];end end break;end if ((3074>=(134 + 2895 + 13)) and (v225==(0 + 0))) then v226=0 + 0;v227=nil;v225=2 -1;end end end,__newindex=function(v222,v223,v224)local v228=0 + 0;local v229;while true do if ((3326<(7684 -3759)) and ((122 -(66 + 56))==v228)) then v229=v171[v223];v229[3 -2][v229[1 + 1]]=v224;break;end end end});v195=1;end if (((2 -1)==v195) or ((4570 -1797)>4083)) then v168=2 + 0;break;end end end end else v91[v93[(13 -10) -1]]=v29(v86[v93[3]],nil,v37);end elseif ((v94<=(22 + 1)) or (579==(2301 -(690 + 708)))) then if ((v94<=21) or (3660<((873 -536) + 251))) then local v127=169 -(14 + 155);local v128;while true do if ((v127==(0 + 0)) or ((9068 -4424)<=4458)) then v128=v93[2 + (1764 -(654 + 1110))];v91[v128](v91[v128 + 1 + 0]);break;end end elseif ((v94==(49 -27)) or ((300 + 93 + 18)>2317)) then v91[v93[1 + 1]][v93[(783 -(695 + 85)) + 0]]=v91[v93[1592 -(1234 + 354)]];else v37[v93[3]]=v91[v93[1245 -(1068 + 175)]];end elseif (((4221 -(592 + 47))<=(3050 + 1304)) and (v94<=(55 -30))) then if (((5111 -2954)>=506) and (v94>(42 -(427 -(4 + 405))))) then v91[v93[1985 -(573 + 242 + 1168)]]=v91[v93[7 -4]];else local v176=0;local v177;local v178;local v179;while true do if ((3489>2235) and (0==v176)) then v177=0;v178=nil;v176=39 -(15 + 23);end if ((v176==(1474 -(768 + 705))) or ((7717 -5712)<=(531 + 32))) then v179=nil;while true do if (((1598 -((318 -251) + 268))<=((11601 -8287) + 921)) and (v177==(0 -(0 -0)))) then local v210=0;while true do if (((1 + 0)==v210) or ((5769 -((1873 -350) + 466))>=(1954 + 2287))) then v177=1 -0;break;end if ((v210==0) or ((11492 -7877)>(15917 -11570))) then v178=0;v179=nil;v210=1 + (1030 -(665 + 365));end end end if (((514 + 128)<((5570 + 2731) -4503)) and (v177==(1 + 0))) then while true do if (((1221 + 418)<2747) and (v178==(0 -0))) then v179=v93[1 + 1];v91[v179]=v91[v179]();break;end end break;end end break;end end end elseif ((v94>26) or ((2901 -(1395 + 302))==(370 + 32))) then v91[v93[(3 -1) + 0 + 0]]=v91[v93[3]][v93[695 -(502 + 189)]];elseif (((1787 -(134 + 27))==(4160 -2534)) and (v91[v93[1 + 1]]==v93[2 + 2])) then v78=v78 + 1;else v78=v93[3];end v78=v78 + 1 + 0;break;end end break;end end end end A,B=v27(v11(v82));if  not A[1] then local v95=0;local v96;while true do if (v95==0) then v96=v35[4][v78] or "?";error("Script error at ["   .. v96   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end if (v59==0) then v60=v35[1];v61=v35[2];v59=1;end end end return v29(v28(),{},v17)();end vv9());break;end end end
